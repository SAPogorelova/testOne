# 1. Сумма цифр в числе
# Задача: Напишите функцию, которая принимает целое число, используя цикл for, и возвращает сумму всех его цифр.
# Например, для числа 12345 функция должна вернуть 15.

Ответ:
вариант 1
a = input()
def sum_all(c):
    total = 0
    for all in c:
        total += int(all)
    print(total)

sum_all(a)

вариант 2

a = input()
def sum_all(number):
    number_str = str(number)   
    total_sum = 0    
    for all in number_str:        
        total_sum += int(all)
    return total_sum
print(sum_all(a)) 

-----------------------------------------------------------------------------------------------------------------------


# 2. Подсчет гласных букв
# Задача: Создайте функцию, которая принимает строку и возвращает количество гласных букв в этой строке.
# Используйте цикл for для перебора символов в строке. Например, для строки "Hello, world!" функция должна вернуть 3,
# так как в строке есть три гласные буквы.

Ответ:

a = input()
def word(s):
    count = 0
    vowels = ('aeiouy')
    for letter in s:
        if letter in vowels:
            count += 1
    print(count)

word(a)

-------------------------------------------------------------------------------------------------------------------------
# 3. Игра "Камень, ножницы, бумага" с дополнительными правилами:
# Напишите программу для игры "Камень, ножницы, бумага",
# в которую могут играть два игрока.
# Каждый игрок выбирает один из трех символов.
# Камень побеждает ножницы, ножницы побеждают бумагу, бумага побеждает камень.
# В этой версии игры добавьте два дополнительных символа: "огонь" и "вода".
# Огонь побеждает камень и ножницы, но проигрывает бумаге и воде, вода побеждает камень и огонь,
# но проигрывает ножницам и бумаге.
# Программа должна принимать выбор каждого игрока и выводить результат игры.

player1 = input("Первый игрок, введите значение (камень/ножницы/бумага/огонь/вода):\n")
player2 = input("Второй игрок, введите значение (камень/ножницы/бумага/огонь/вода):\n")

def play(a,b):
    if a == "камень":
        if b == "камень":
            return "Ничья"
        elif b == "бумага":
            return "Побеждает бумага"
        elif b == "ножницы":
            return "Побеждает камень"
        elif b == "огонь":
            return "Побеждает огонь"
        elif b == "вода":
            return "Побеждает вода"
    elif a == "бумага":
        if b == "камень":
            return "Побеждает бумага"
        elif b == "бумага":
            return "Ничья"
        elif b == "ножницы":
            return "Побеждает ножницы"
        elif b == "огонь":
            return "Побеждает бумага"
        elif b == "вода":
            return "Побеждает бумага"
    elif a == "ножницы":
        if b == "камень":
            return "Побеждает камень"
        elif b == "бумага":
            return "Побеждает ножницы"
        elif b == "ножницы":
            return "Ничья"
        elif b == "огонь":
            return "Побеждает огонь"
        elif b == "вода":
            return "Побеждают ножницы"
    elif a == "огонь":
        if b == "огонь":
            return "Ничья"
        elif b == "Камень":
            return "Побеждает огонь"
        elif b == "Ножницы":
            return "Побеждает огонь"
        elif b == "Бумага":
            return "Побеждает бумага"
        elif b == "вода":
            return  "Побеждает вода"
    elif a == "вода":
        if b == "вода":
            return "Ничья"
        elif b == "огонь":
            return ("Побеждает вода")
        elif b == "камень":
            return "Побеждает вода"
        elif b == "ножницы":
            return "Побеждают ножницы"
        elif b == "бумага":
            return "Побеждает бумага"

print(play(player1,player2))


-----------------------------------------------------------------------------------------------------------------------

# 4. Зашифровка и расшифровка текста: Написать две функции - одну для зашифровки текста,
# другую для его расшифровки. Шифрование должно осуществляться путем
# сдвига каждой буквы на определенное количество позиций в алфавите.
# Например, при сдвиге на 2, буква 'a' превращается в 'c', 'b' - в 'd' и так далее.
# Функция шифрования принимает текст и число, на которое нужно сдвинуть буквы,
# а функция расшифровки - зашифрованный текст и тот же сдвиг.
# Для простоты можно считать алфавит цикличным, т.е. после 'z' снова идет 'a'.

Ответ:

def encrypt(text, shift):
# encrypt - функция для зашифровки текста
    encrypted_text = "" # Инициализация строки для зашифрованного текста
    for char in text: # Цикл по каждому символу в исходном тексте
        if char.isalpha():  # Проверка, является ли символ буквой
            shifted = ord(char) + shift  # Сдвигаем символ
            if char.islower():  # Проверка и корректировка для строчных букв (a-z)
                if shifted > ord('z'):
                    shifted -= 26 # корректировка значения таким образом, чтобы после сдвига оно снова попало в диапазон строчных букв алфавита
                encrypted_text += chr(shifted)
            # ord(char)` возвращает ASCII код символа, chr(shifted)` преобразует ASCII код обратно в символ.
            elif char.isupper():  # Проверка и корректировка Для заглавных букв
                if shifted > ord('Z'):
                    shifted -= 26
                encrypted_text += chr(shifted)
        else:
            encrypted_text += char  # Добавление неизмененных символов (не букв). Не меняем символы, которые не являются буквами
    return encrypted_text # Возврат зашифрованного текста

def decrypt(encrypted_text, shift): # Функция `decrypt` - расшифровка, работает аналогично encrypt
    decrypted_text = ""
    for char in encrypted_text:
        if char.isalpha():  # Проверка, является ли символ буквой
            shifted = ord(char) - shift  # Сдвигаем символ назад
            if char.islower():  # Для строчных букв
                if shifted < ord('a'):
                    shifted += 26
                decrypted_text += chr(shifted)
            elif char.isupper():  # Для заглавных букв
                if shifted < ord('A'):
                    shifted += 26
                decrypted_text += chr(shifted)
        else:
            decrypted_text += char  # Не меняем символы, которые не являются буквами
    return decrypted_text

# Задаем значения
text = "Hello, World!"
shift = 2

# Зашифровка
encrypted_text = encrypt(text, shift)
print(f"Зашифрованный текст: {encrypted_text}")

# Расшифровка
decrypted_text = decrypt(encrypted_text, shift)
print(f"Расшифрованный текст: {decrypted_text}")

