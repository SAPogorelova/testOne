Ветвление

# 1. Классификатор возраста: Написать программу, которая принимает возраст пользователя и выводит категорию:
# "ребенок" (0-12), "подросток" (13-17), "взрослый" (18-64) или "пожилой человек" (65 и старше).

Ответ:
age = int(input("Введите Ваш возраст"))
if age <= 12:
    category = "ребенок"
elif 13 <= age <= 17:
    category = "подросток"
elif 18 <= age <= 64:
    category = "взрослый"
elif age >= 65:
    category = "пожилой человек"
print(f"Ваша возрастная категория:{category}")
-----------------------------------------------------------------------------------------------------------------------
# 3. Программа для оценки пароля: Написать программу, которая анализирует введенный пароль и выводит его оценку:
# слабый (менее 6 символов), средний (6-12 символов, содержит только буквы и цифры)
# или сильный (более 12 символов, содержит буквы, цифры и спецсимволы).

Ответ:
password = input("Придумайте пароль (не менее 6 символов. Пароль должен состоять из цифр и латинских букв):")
length = len(password)
contains_letters = any(char.isalpha() for char in password)
# isalpha() - вхождение в строку букв
contains_digits = any(char.isdigit() for char in password)
#isdigit() - вхождение в строку цифр
contains_specials = any(not char.isalnum() for char in password)
#isalnum() - вхождение в строку букв и цифр:

if length < 6:
    reliability = "пароль слабый"
elif 6 <= length <= 12:
    if contains_letters and contains_digits and not contains_specials:
        strength = "пароль средний"
    else:
        strength = "пароль слабый"
elif length >= 12:
    if contains_letters and contains_digits and contains_specials:
        strength = "пароль сильный!"
    else:
        strength = "пароль средний"


print(f"Оценка вашего пароля: {strength}")

-----------------------------------------------------------------------------------------------------------------------

# 4. Определение високосного года: Написать программу, которая определяет, является ли год,
# введенный пользователем, високосным. Год считается високосным, если он делится на 4,
# но если он делится на 100, он не является високосным, за исключением случаев, когда он делится на 400.

Ответ:

year = int(input("Введите год: "))

if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    is_leap_year = True
else:
    is_leap_year = False

if is_leap_year:
    print(f"{year} год является високосным.")
else:
    print(f"{year} год не является високосным.")

--------------------------------------------------------------------------------------------------------------
# 5. Калькулятор квадратного уравнения:
# Написать программу, которая решает квадратное уравнение вида ax^2 + bx + c = 0.
# Программа должна принимать значения a, b и c от пользователя и выводить корни уравнения.
# Не забудьте учесть, что дискриминант может быть отрицательным (в этом случае решений нет),
# равным нулю (одно решение) или положительным (два решения).
Ответ:

# Ввод коэффициентов a, b и c от пользователя
a = float(input("Введите коэффициент a: "))
b = float(input("Введите коэффициент b: "))
c = float(input("Введите коэффициент c: "))

# Вычисление дискриминанта
discriminant = b ** 2 - 4 * a * c

# Проверка значения дискриминанта и вычисление корней уравнения
if discriminant > 0:
    # Используем метод Ньютона для нахождения квадратного корня
    def sqrt(x):
        guess = x / 2.0
        while abs(guess * guess - x) > 1e-10:
            guess = (guess + x / guess) / 2.0
        return guess


    sqrt_discriminant = sqrt(discriminant)
    root1 = (-b + sqrt_discriminant) / (2 * a)
    root2 = (-b - sqrt_discriminant) / (2 * a)
    print(f"Уравнение имеет два корня: {root1} и {root2}")
elif discriminant == 0:
    root = -b / (2 * a)
    print(f"Уравнение имеет один корень: {root}")
else:
    print("Уравнение не имеет вещественных корней")
____________________________________________________________________________________________________________________________________________________
Цикл while

# 1. Подсчет суммы чисел:
# Напишите программу, которая считает сумму чисел от 1 до N, где N задается пользователем.

Ответ:

N = int(input("Введите число:"))
a = 1
b = 0
while a <= N:
    print(a)
    b = b + a
    a = a + 1
print(b)

----------------------------------------------------------------------------------------------------

# 2. Поиск суммы 2:
# Напишите программу, которая запрашивает у пользователя числа до тех пор,
# пока не будет введен 0, и находит сумму из введенных чисел.

Ответ:

print("Угадай число:")
N = 0
sum = 0
while True:
    number = int(input())
    if number == N:
        print('Вы угадали. Поздравляем.')
        break
    else:
        print ('Попробуйте еще раз.')
    sum += number
print(f"Сумма введенных чисел: {sum}")

